name: Create Release
on:
  push:
    tags:
      - "*.**"

jobs:
  build_and_push:
    name: Build and push container image
    runs-on: ubuntu-latest
    permissions:
      packages: write
      contents: write
    steps:
      - name: Check out the repo
        uses: actions/checkout@v2

      - name: Set env
        id: env
        run: |
          echo ::set-output name=tag::${GITHUB_REF#refs/tags/}
          echo ::set-output name=repository::${GITHUB_REPOSITORY/-}

      - id: static-coreutils
        uses: &latest-action pozetroninc/github-action-get-latest-release@master
        with:
          <<: &latest-release
            excludes: prerelease, draft
            token: ${{ secrets.GITHUB_TOKEN }}
          repository: awesome-containers/static-coreutils


      - id: static-bash
        uses: *latest-action
        with:
          <<: *latest-release
          repository: awesome-containers/static-bash

      - id: static-grep
        uses: *latest-action
        with:
          <<: *latest-release
          repository: awesome-containers/static-grep

      - id: static-sed
        uses: *latest-action
        with:
          <<: *latest-release
          repository: awesome-containers/static-sed

      - id: static-findutils
        uses: *latest-action
        with:
          <<: *latest-release
          repository: awesome-containers/static-findutils

      - id: static-gawk
        uses: *latest-action
        with:
          <<: *latest-release
          repository: awesome-containers/static-gawk

      - id: static-procps
        uses: *latest-action
        with:
          <<: *latest-release
          repository: awesome-containers/static-procps

      - id: static-curl
        uses: *latest-action
        with:
          <<: *latest-release
          repository: awesome-containers/static-curl

      - id: static-openssl
        uses: *latest-action
        with:
          <<: *latest-release
          repository: awesome-containers/static-openssl

      - id: static-openssh
        uses: *latest-action
        with:
          <<: *latest-release
          repository: awesome-containers/static-openssh

      - name: Log in to GitHub Container registry
        if: github.event_name != 'pull_request'
        uses: docker/login-action@v2
        with:
          registry: ghcr.io
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - name: Log in to Docker Hub Container registry
        if: github.event_name != 'pull_request'
        uses: docker/login-action@v2
        with:
          username: ${{ secrets.DOCKER_USERNAME }}
          password: ${{ secrets.DOCKER_PASSWORD }}

      - name: Build and push container image
        uses: docker/build-push-action@v4
        with:
          context: .
          file: ./Containerfile
          push: ${{ github.event_name != 'pull_request' }}
          tags: |
            ghcr.io/${{ github.repository }}:${{ steps.env.outputs.tag }}
            ghcr.io/${{ github.repository }}:latest
            docker.io/${{ steps.env.outputs.repository }}:${{ steps.env.outputs.tag }}
            docker.io/${{ steps.env.outputs.repository }}:latest
          build-args: &build-args |
            COREUTILS_VERSION=${{ steps.static-coreutils.outputs.release }}
            BASH_VERSION=${{ steps.static-bash.outputs.release }}
            GREP_VERSION=${{ steps.static-grep.outputs.release }}
            SED_VERSION=${{ steps.static-sed.outputs.release }}
            FINDUTILS_VERSION=${{ steps.static-findutils.outputs.release }}
            GAWK_VERSION=${{ steps.static-gawk.outputs.release }}
            PROCPS_VERSION=${{ steps.static-procps.outputs.release }}
            CURL_VERSION=${{ steps.static-curl.outputs.release }}
            OPENSSL_VERSION=${{ steps.static-openssl.outputs.release }}
            OPENSSH_VERSION=${{ steps.static-openssh.outputs.release }}

      - name: Build and push slim container image
        uses: docker/build-push-action@v4
        with:
          context: .
          file: ./Containerfile-slim
          push: ${{ github.event_name != 'pull_request' }}
          tags: |
            ghcr.io/${{ github.repository }}:${{ steps.env.outputs.tag }}-slim
            ghcr.io/${{ github.repository }}:latest-slim
            docker.io/${{ steps.env.outputs.repository }}:${{ steps.env.outputs.tag }}-slim
            docker.io/${{ steps.env.outputs.repository }}:latest-slim
          build-args: *build-args

      - name: Create Release
        id: create_release
        uses: ncipollo/release-action@v1
        with:
          token: ${{ secrets.GITHUB_TOKEN }}
          body: |
            ${{ github.repository }}:**${{ steps.env.outputs.tag }}**

            * `docker pull ghcr.io/${{ github.repository }}:${{ steps.env.outputs.tag }}`
            * `docker pull docker.io/${{ steps.env.outputs.repository }}:${{ steps.env.outputs.tag }}`

            ${{ github.repository }}:**${{ steps.env.outputs.tag }}-slim**

            * `docker pull ghcr.io/${{ github.repository }}:${{ steps.env.outputs.tag }}-slim`
            * `docker pull docker.io/${{ steps.env.outputs.repository }}:${{ steps.env.outputs.tag }}-slim`

          draft: false
          prerelease: false
